- hosts: localhost
  connection: local
  vars:
    audit_resource_group: mlopscluster03rg
    policy_as_code_plan_validation_url: "http://169.48.153.174:8181/v1/data/policyascode/audit"
    report_resource_group: mlopscluster03rg
    report_storage_account_name: ansiblepacreports
    report_storage_container: nsgreports
  tasks:
    - name: get all nsgs for resource group
      azure.azcollection.azure_rm_securitygroup_info:
        resource_group: "{{ audit_resource_group }}"
      register: network_security_groups
        
    - name: Validate plan
      ansible.builtin.uri:
        url: "{{ policy_as_code_plan_validation_url }}"
        method: POST
        body: '{"input": {{ network_security_groups }} }'
        body_format: json
      check_mode: no
      register: validation_response

    - name: Set validation failures variable
      set_fact: validation_failures="{{validation_response.json.result.resource_validation_failures}}"

    - name: Create job templates for each validation failure
      awx.awx.job_template:
        name: "{{ item.playbook.split('.') | first }}-{{ item.resource.etag.replace('\"', '').split('/') | last }}"
        job_type: "run"
        organization: "Default"
        inventory: "Demo Inventory"
        project: "Playbooks PaC Project"
        playbook: "{{ item.playbook }}"
        credentials:
          - "Azure Service Principal"
        execution_environment: "Policy as Code Execution Environment"
        extra_vars: "{{ item.playbook_variables }}"
      when: item.playbook != 'Not implemented'
      with_items: "{{ validation_failures }}"
      register: create_job_template_results
      check_mode: no

    - name: Generating report_file_name variable for later use
      set_fact: report_file_name="nsgreport-{{ audit_resource_group }}-{{ ansible_date_time.iso8601 }}.html"
    
    - name: create HTML report
      template:
        src: ./reports/nsgreport.html.j2
        dest: "./{{ report_file_name }}"
      delegate_to: localhost
    
    - name: Create storage container and upload the network audit report
      azure_rm_storageblob:
        resource_group: "{{ report_resource_group }}"
        storage_account_name: "{{ report_storage_account_name }}"
        container: "{{ report_storage_container }}"
        blob: "{{ report_file_name }}"
        src: "./{{ report_file_name }}"
        public_access: container
        content_type: 'text/html'
    
    - name: Output report URL to user
      debug:
        msg: "Report created, view report at https://{{ report_storage_account_name }}.blob.core.windows.net/{{ report_storage_container }}/{{ report_file_name }}"